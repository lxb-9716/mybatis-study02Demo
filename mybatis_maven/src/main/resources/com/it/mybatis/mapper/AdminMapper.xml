<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.it.mybatis.mapper.AdminMapper">
    <!--开启com.it.mybatis.mapper.AdminMapper 的二级缓存，必须要配置该标签才能使用com.it.mybatis.mapper.AdminMapper的二级缓存-->
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

    <!--当sql查询语句返回的列字段名和pojo的属性名不一致时，可以通过使用resultMap来完成映射
      id属性是resultMap的唯一标识
     -->
    <resultMap id="resultMapFindAll" type="AdimCustomer">
        <!--column表示sql查询条件返回的字段列表名(和pojo的属性名不一致)-->
        <!--property表示pojo实体类的属性名-->
        <id column="id_" property="id"/>
        <id column="username_" property="username"/>
        <id column="password_" property="password"/>
    </resultMap>
    <select id="findAll" resultMap="resultMapFindAll">
        select id id_,username username_,password password_ from admin;
    </select>
    <!--resultType特点：当sql查询的列表字段名和pojo属性名不一致的时候无法完成映射(注：当sql查询的所有列表字段名和pojo的属性名不一致的时候，pojo对象不会创建)-->
    <sql id="mainSql">
        select * from admin
    </sql>
    <select id="findByAuto" parameterType="adminVo" resultType="adimCustomer">
        <include refid="mainSql"/>
        <where>
            <if test="adimCustomer !=null">
                <if test="adimCustomer.id != null and adimCustomer.id !=''">
                    id =#{adimCustomer.id}
                </if>
                <if test="adimCustomer.username != null and adimCustomer.username !=''">
                    and username =#{adimCustomer.username}
                </if>
                <if test="ids !=null">
                    <!--foreach标签的使用 or in等关键字的查询
                    mybatis基础学习动态sql的拼接学习：
                             if标签使用
                             where标签使用
                             sql片段标签使用
                             foreach标签使用
                                    collection：指定输入对象中集合属性
                                    item：每次遍历时的变量名
                                    open：开始遍历需要拼接的串
                                    close：结束时遍历时需要拼接的串
                                    separator：遍历的两个对象中拼接的串
                    -->
                    <!-- select * from admin where id=1 or id=2 or id=3 -->
                    <foreach collection="ids" item="admin_id" open=" and (" close=")" separator="or">
                        id=#{admin_id}
                    </foreach>
                    <!-- select * from admin where id in(1,2,3) -->
                    <foreach collection="ids" item="admin_id" open=" and id in(" close=")" separator=",">
                        #{admin_id}
                    </foreach>
                </if>
            </if>
        </where>
    </select>
    <select id="findByUserName" parameterType="String" resultType="com.it.mybatis.pojo.Admin">
        select * from admin where username like #{username};
    </select>
    <insert id="insertAdmin" parameterType="com.it.mybatis.pojo.Admin">
        /*获得主键*/
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID();
        </selectKey>
        insert into admin values(#{id},#{username},#{password},#{submitTime});
    </insert>
    <update id="updateAdmin" parameterType="com.it.mybatis.pojo.Admin">
        update admin set username = #{username},password= #{password} where id = #{id}
    </update>
    <delete id="deleteAdminById" parameterType="int">
         delete from admin where id=#{id}
     </delete>

    <!--根据用户id查询用户信息-->
    <select id="findAdminById" parameterType="adminVo" resultType="adimCustomer" useCache="true">
        select * from admin where id=#{adimCustomer.id}
    </select>
</mapper>